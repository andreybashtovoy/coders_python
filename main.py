from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackContext, CallbackQueryHandler
import warnings
import json


from data import Data

warnings.filterwarnings('ignore')


class CommandHandlers:



    def __init__(self):
        f = open('babySemenToken.json')
        json_object = json.load(f)

        updater = Updater(json_object["token"])
        updater.dispatcher.add_handler(CommandHandler('stats', self.stats))
        updater.dispatcher.add_handler(CommandHandler('stats', self.stats))
        updater.dispatcher.add_handler(CallbackQueryHandler(self.on_button_click))

        updater.start_polling()
        updater.idle()

    def stats(self, update: Update, context: CallbackContext) -> None:
        keyboard = [
            [
                InlineKeyboardButton("üìÖ –ü–æ–ª–µ–∑–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ –¥–Ω—è–º", callback_data="üî¥—Ñ")
            ],
            [
                InlineKeyboardButton("üß© –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Å–µ–º –∑–∞–Ω—è—Ç–∏—è–º", callback_data="üî¥—Ñ")
            ],
            [
                InlineKeyboardButton("ü§π‚Äç‚ôÇÔ∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–∂–¥–æ–º—É –∑–∞–Ω—è—Ç–∏—é –æ—Ç–¥–µ–ª—å–Ω–æ", callback_data="all_tasks")
            ],
        ]

        reply_markup = InlineKeyboardMarkup(keyboard)
        update.message.reply_text("*üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @vasyanedown*\n\n"
                                  "üü¢ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫—Ç–∏–≤–Ω–æ –∑–∞–Ω—è—Ç–∏–µ \"_SEX_\" (_1 —á–∞—Å 14 –º–∏–Ω—É—Ç_)\n\n" \
                                  "‚è± *–í—Ä–µ–º—è —Å –ø–æ–ª—å–∑–æ–π*\n" \
                                  "–ó–∞ —Å–µ–≥–æ–¥–Ω—è: _1234_ —á–∞—Å–æ–≤\n" \
                                  "–ó–∞ –Ω–µ–¥–µ–ª—é: _123_ —á–∞—Å–æ–≤\n" \
                                  "–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è: _777_ —á–∞—Å–æ–≤\n", parse_mode="Markdown", reply_markup=reply_markup)

    def on_button_click(self, update: Update, context):
        query = update.callback_query

        if query.data == "üî¥":
            context.bot.send_dice(update.effective_chat.id)

        elif query.data == 'all_tasks':
            print(context.bot.send_dice(update.effective_chat.id))


        print(update)

        update.callback_query.delete_message()


CommandHandlers()
